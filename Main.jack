// main class, top level class handles opertaion of minesweeper game
class Main {
  // current instance of board class
  static Board b;
  // number of mines remaining, game ends when zero
  static int mines_left;
  // current cursor position
  static int cursor;

  // Top level function for controlling minesweeper game
  function void main() {
    do Main.instructions();
    do Maths.initSeed();
    do Main.initMines();
    do Screen.clearScreen();
    let b = Board.new();
    let cursor = 0;

    do b.draw();

    // main gameplay loop
    while (mines_left > 0) {
      do Main.keyHandler();
      do b.draw();
      do Sys.wait(50);
    }
    
    do Main.gameOver(true, "You are the god of Minesweepr");   

    return;
  }

  // Initial setter for number of mines
  function void initMines() {
    var int x;
    let x = (Keyboard.readInt("Number of mines?: "));
    while (x > 144) {
      let x = (Keyboard.readInt("That is way too many. Be serious: "));
    }
    let mines_left = x;
    return;
  }

  // Key Handler
  function void keyHandler() {
    var int k;
    let k = Keyboard.keyPressed();
    
    // arrow keys
    if ((k > 129) & (k < 134)) {
      do Board.moveCursor(k);
    }
    // enter key
    if (k = 128) {
      do b.click();
    }
    // "f" key
    if (k = 70) {
      do b.flag();
    }
    return;
  }

  // clicks all squares with no adjacent mines recursively 
  // !!! future feature 
  function Board safeSquares(Board board) {
    return b;
  }
  
  // ends the game and starts a new one
  function void gameOver(boolean win, string msg) {
    do b.clickAll();
    if (~win) {
      do b.clickedMine();
    }
    let cursor = 144;
    do b.draw();
    do Sys.wait(5000);
    do Output.moveCursor(0, 0);
    do Screen.clearScreen();
    do Output.printString(msg);
    do Sys.wait(2000);
    do Screen.clearScreen();
    do Output.moveCursor(0, 0);
    do Main.main();
    return;
  }

  // print game instructions
  function void instructions() {
    do Output.printString("Welcome 2 Minesweepr");
    do Output.println();
    do Output.println();
    do Output.printString("Controls:");
    do Output.println();
    do Output.printString("Arrow Keys = move cursor");
    do Output.println();
    do Output.printString("Enter Key = click square"); 
    do Output.println();
    do Output.printString("F Key = place flag");
    do Output.println();
    do Output.println();
    do Output.printString("place a flag on each mine to win, click a mine to lose");
    do Sys.wait(5000);
    do Output.moveCursor(0, 0);
    do Screen.clearScreen();
    return;
  }

  // Accessors 
  function int getMinesLeft() {
    return mines_left;
  }

  function Board getBoard() {
    return b;
  }
  
  function int getCursor() {
    return cursor;
  }

  // Setters 
  function void decMinesLeft() {
    let mines_left = (mines_left - 1); 
    return;
  }
  
  function void incMinesLeft() {
    let mines_left = (mines_left + 1);
    return;
  }

  function void setBoard(Board board) {
    let b = board;
    return;
  }
  
  function void setCursor(int i) {
    let cursor = i;
    return;
  }


}
  