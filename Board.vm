function Board.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
call Board.init 0
pop this 0
push pointer 0
call Board.placeMines 1
pop temp 0
push pointer 0
call Board.adjacentMines 1
pop temp 0
push pointer 0
call Board.draw 1
pop temp 0
push pointer 0
return
function Board.init 4
push constant 0
pop local 0
push constant 144
call Array.new 1
pop local 3
label WHILE_EXP0
push local 0
push constant 144
lt
not
if-goto WHILE_END0
push constant 136
push constant 20
push local 0
push constant 12
call Maths.mod 2
call Math.multiply 2
add
pop local 1
push constant 8
push constant 20
push local 0
push constant 12
call Math.divide 2
call Math.multiply 2
add
pop local 2
push local 0
push local 3
add
push local 1
push local 2
call Square.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 3
return
function Board.placeMines 3
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
call Main.getMinesLeft 0
lt
not
if-goto WHILE_END0
push constant 143
call Maths.randRange 1
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 2
call Square.getMine 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
call Square.setMine 1
pop temp 0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.adjacentMines 12
push argument 0
pop pointer 0
push constant 0
pop local 10
label WHILE_EXP0
push local 10
push constant 144
lt
not
if-goto WHILE_END0
push constant 0
pop local 0
push local 10
push constant 12
call Math.divide 2
pop local 9
push local 10
push constant 13
sub
pop local 1
push local 10
push constant 12
sub
pop local 2
push local 10
push constant 11
sub
pop local 3
push local 10
push constant 1
sub
pop local 4
push local 10
push constant 1
add
pop local 5
push local 10
push constant 11
add
pop local 6
push local 10
push constant 12
add
pop local 7
push local 10
push constant 13
add
pop local 8
push local 1
push constant 1
neg
gt
push local 1
push constant 12
call Math.divide 2
push local 9
push constant 1
sub
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
add
pop local 0
label IF_FALSE1
label IF_FALSE0
push local 2
push constant 1
neg
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
add
pop local 0
label IF_FALSE3
label IF_FALSE2
push local 3
push constant 1
neg
gt
push local 1
push constant 12
call Math.divide 2
push local 9
push constant 1
sub
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 3
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push constant 1
add
pop local 0
label IF_FALSE5
label IF_FALSE4
push local 4
push constant 12
call Math.divide 2
push local 9
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 4
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push constant 1
add
pop local 0
label IF_FALSE7
label IF_FALSE6
push local 5
push constant 12
call Math.divide 2
push local 9
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 5
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 0
push constant 1
add
pop local 0
label IF_FALSE9
label IF_FALSE8
push local 6
push constant 144
lt
push local 6
push constant 12
call Math.divide 2
push local 9
push constant 1
add
eq
and
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 6
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 0
push constant 1
add
pop local 0
label IF_FALSE11
label IF_FALSE10
push local 7
push constant 144
lt
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 7
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push local 0
push constant 1
add
pop local 0
label IF_FALSE13
label IF_FALSE12
push local 8
push constant 144
lt
push local 8
push constant 12
call Math.divide 2
push local 9
push constant 1
add
eq
and
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push local 8
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
call Square.getMine 1
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push local 0
push constant 1
add
pop local 0
label IF_FALSE15
label IF_FALSE14
push local 10
push this 0
add
pop pointer 1
push that 0
pop local 11
push local 11
push local 0
call Square.setAdjacentMines 2
pop temp 0
push local 10
push constant 1
add
pop local 10
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.draw 4
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 144
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Square.getX 1
pop local 2
push local 1
call Square.getY 1
pop local 3
push local 1
call Square.getFlagged 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push local 3
call Draw.flagged 2
pop temp 0
label IF_FALSE0
push local 1
call Square.getClicked 1
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push local 3
call Draw.unclicked 2
pop temp 0
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Board.moveCursor 2
push argument 0
pop pointer 0
call Main.getCursor 0
pop local 1
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call square.setCursorFalse 1
pop temp 0
push argument 1
call Board.cursorMath 1
pop temp 0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call square.setCursorTrue 1
pop temp 0
push constant 0
return
function Board.cursorMath 1
call Main.getCursor 0
pop local 0
push argument 0
push constant 130
eq
push local 0
push constant 0
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 143
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 0
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
sub
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 0
push constant 131
eq
push local 0
push constant 16
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push constant 131
add
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE2
push argument 0
push constant 131
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 16
sub
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE3
push argument 0
push constant 132
eq
push local 0
push constant 143
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE4
push argument 0
push constant 132
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 0
push constant 1
add
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE5
push argument 0
push constant 132
eq
push local 0
push constant 131
gt
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 131
push local 0
sub
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE6
push argument 0
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 0
push constant 16
add
call Main.setCursor 1
pop temp 0
push constant 0
return
label IF_FALSE7
push constant 0
return
